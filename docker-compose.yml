version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: jobdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d jobdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/jobdb
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=True
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn jobaggregator.wsgi:application --bind 0.0.0.0:8000 --reload
      "

  scraper:
    build: ./scraper
    ports:
      - "8001:8001"
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./scraper:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload

  celery:
    build: ./backend
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/jobdb
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    command: celery -A jobaggregator worker --loglevel=info

  celery-beat:
    build: ./backend
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/jobdb
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    command: celery -A jobaggregator beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/staticfiles:/static
    depends_on:
      - backend
      - scraper

volumes:
  postgres_data:
  redis_data: